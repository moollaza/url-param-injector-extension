(()=>{"use strict";var e={},r={};function a(t){var i=r[t];if(void 0!==i)return i.exports;var o=r[t]={exports:{}};return e[t](o,o.exports,a),o.exports}function t(e,...r){console.log(`[URL Params Injector] ${e}`,...r)}async function i(e){let r=(await chrome.declarativeNetRequest.getDynamicRules()).map(e=>e.id),a=[],i=1;if(e)for(let r of e){if(!r.domain)continue;let e=r.params.filter(e=>!1!==e.override&&e.key),t=r.params.filter(e=>!1===e.override&&e.key);for(let o of(e.length>0&&a.push({id:i++,priority:1,action:{type:"redirect",redirect:{transform:{queryTransform:{addOrReplaceParams:e.map(({key:e,value:r})=>({key:e,value:r}))}}}},condition:{urlFilter:`||${r.domain}/`,resourceTypes:["main_frame"]}}),t))a.push({id:i++,priority:2,action:{type:"redirect",redirect:{transform:{queryTransform:{addOrReplaceParams:[{key:o.key,value:o.value}]}}}},condition:{urlFilter:`||${r.domain}/`,resourceTypes:["main_frame"],regexFilter:`^((?![?&]${o.key.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}=).)*$`}})}t("Removing all old rules."),t("Adding new rules:",JSON.stringify(a,null,2)),await chrome.declarativeNetRequest.updateDynamicRules({removeRuleIds:r,addRules:a}),t("Rules updated successfully.")}a.rv=()=>"1.3.15",a.ruid="bundler=rspack@1.3.15",chrome.runtime.onInstalled.addListener(()=>{t("Extension installed"),chrome.storage.local.get("rules",({rules:e})=>{if(e)i(e);else{let e=[{domain:"use-serp-dev-testing8.duck.co",params:[{key:"ddg_accounts_experiment",value:"1",override:!0}]}];chrome.storage.local.set({rules:e},()=>{i(e)})}})}),chrome.storage.onChanged.addListener((e,r)=>{"local"===r&&e.rules&&(t("Rules changed, updating..."),i(e.rules.newValue))})})();